// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  slug        String   @unique(map: "product_slug_idx")
  category    String
  images      String[]
  brand       String
  description String
  stock       Int
  price       Decimal  @default(0) @db.Decimal(12, 2)
  rating      Decimal  @default(0) @db.Decimal(3, 2)
  numReviews  Int      @default(0) @map("num_reviews")
  isFeatured  Boolean  @default(false) @map("is_featured")
  banner      String?
  createdAt   DateTime @default(now()) @db.Timestamp(6) @map("created_at")

  @@map("products")
}

model User {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String    @default("")
  email         String    @unique
  image         String?
  password      String?
  role          String    @default("user")
  address       Json?     @db.Json
  paymentMethod String?   @map("payment_method")
  createdAt     DateTime  @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  carts         Cart[]

  @@map("users")
}

model Account {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId            String   @db.Uuid @map("user_id")
  type              String
  provider          String
  providerAccountId String   @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now()) @db.Timestamp(6) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Cart {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId          String?  @db.Uuid @map("user_id")
  sessionCartId   String   @map("session_cart_id")
  items           Json[]   @default([]) @db.Json
  shippingPrice   Decimal  @db.Decimal(12, 2) @map("shipping_price")
  taxPercentage   Decimal  @db.Decimal(5, 2) @default(0) @map("tax_percentage")
  createdAt       DateTime @default(now()) @db.Timestamp(6) @map("created_at")

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("carts")
}
